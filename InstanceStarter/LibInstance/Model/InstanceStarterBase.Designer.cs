//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("InstanceStarterBaseModel", "FK_TableTask_TableInstance", "TableInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibInstance.Model.TableInstance), "TableTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibInstance.Model.TableTask), true)]

#endregion

namespace LibInstance.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class InstanceStarterBaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new InstanceStarterBaseEntities object using the connection string found in the 'InstanceStarterBaseEntities' section of the application configuration file.
        /// </summary>
        public InstanceStarterBaseEntities() : base("name=InstanceStarterBaseEntities", "InstanceStarterBaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InstanceStarterBaseEntities object.
        /// </summary>
        public InstanceStarterBaseEntities(string connectionString) : base(connectionString, "InstanceStarterBaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InstanceStarterBaseEntities object.
        /// </summary>
        public InstanceStarterBaseEntities(EntityConnection connection) : base(connection, "InstanceStarterBaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TableInstance> TableInstance
        {
            get
            {
                if ((_TableInstance == null))
                {
                    _TableInstance = base.CreateObjectSet<TableInstance>("TableInstance");
                }
                return _TableInstance;
            }
        }
        private ObjectSet<TableInstance> _TableInstance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TableTask> TableTask
        {
            get
            {
                if ((_TableTask == null))
                {
                    _TableTask = base.CreateObjectSet<TableTask>("TableTask");
                }
                return _TableTask;
            }
        }
        private ObjectSet<TableTask> _TableTask;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TableInstance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTableInstance(TableInstance tableInstance)
        {
            base.AddObject("TableInstance", tableInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TableTask EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTableTask(TableTask tableTask)
        {
            base.AddObject("TableTask", tableTask);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InstanceStarterBaseModel", Name="TableInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TableInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TableInstance object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="imageId">Initial value of the ImageId property.</param>
        /// <param name="instanceType">Initial value of the InstanceType property.</param>
        /// <param name="keyName">Initial value of the KeyName property.</param>
        /// <param name="securityGroup">Initial value of the SecurityGroup property.</param>
        /// <param name="runningTaskNumber">Initial value of the RunningTaskNumber property.</param>
        /// <param name="maxTaskNumber">Initial value of the MaxTaskNumber property.</param>
        /// <param name="iPAndPort">Initial value of the IPAndPort property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        public static TableInstance CreateTableInstance(global::System.Int32 id, global::System.String imageId, global::System.String instanceType, global::System.String keyName, global::System.String securityGroup, global::System.Int32 runningTaskNumber, global::System.Int32 maxTaskNumber, global::System.String iPAndPort, global::System.String userName, global::System.String password, global::System.String instanceId)
        {
            TableInstance tableInstance = new TableInstance();
            tableInstance.ID = id;
            tableInstance.ImageId = imageId;
            tableInstance.InstanceType = instanceType;
            tableInstance.KeyName = keyName;
            tableInstance.SecurityGroup = securityGroup;
            tableInstance.RunningTaskNumber = runningTaskNumber;
            tableInstance.MaxTaskNumber = maxTaskNumber;
            tableInstance.IPAndPort = iPAndPort;
            tableInstance.UserName = userName;
            tableInstance.Password = password;
            tableInstance.InstanceId = instanceId;
            return tableInstance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageId
        {
            get
            {
                return _ImageId;
            }
            set
            {
                OnImageIdChanging(value);
                ReportPropertyChanging("ImageId");
                _ImageId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageId");
                OnImageIdChanged();
            }
        }
        private global::System.String _ImageId;
        partial void OnImageIdChanging(global::System.String value);
        partial void OnImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceType
        {
            get
            {
                return _InstanceType;
            }
            set
            {
                OnInstanceTypeChanging(value);
                ReportPropertyChanging("InstanceType");
                _InstanceType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstanceType");
                OnInstanceTypeChanged();
            }
        }
        private global::System.String _InstanceType;
        partial void OnInstanceTypeChanging(global::System.String value);
        partial void OnInstanceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KeyName
        {
            get
            {
                return _KeyName;
            }
            set
            {
                OnKeyNameChanging(value);
                ReportPropertyChanging("KeyName");
                _KeyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("KeyName");
                OnKeyNameChanged();
            }
        }
        private global::System.String _KeyName;
        partial void OnKeyNameChanging(global::System.String value);
        partial void OnKeyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityGroup
        {
            get
            {
                return _SecurityGroup;
            }
            set
            {
                OnSecurityGroupChanging(value);
                ReportPropertyChanging("SecurityGroup");
                _SecurityGroup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityGroup");
                OnSecurityGroupChanged();
            }
        }
        private global::System.String _SecurityGroup;
        partial void OnSecurityGroupChanging(global::System.String value);
        partial void OnSecurityGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RunningTaskNumber
        {
            get
            {
                return _RunningTaskNumber;
            }
            set
            {
                OnRunningTaskNumberChanging(value);
                ReportPropertyChanging("RunningTaskNumber");
                _RunningTaskNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunningTaskNumber");
                OnRunningTaskNumberChanged();
            }
        }
        private global::System.Int32 _RunningTaskNumber;
        partial void OnRunningTaskNumberChanging(global::System.Int32 value);
        partial void OnRunningTaskNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxTaskNumber
        {
            get
            {
                return _MaxTaskNumber;
            }
            set
            {
                OnMaxTaskNumberChanging(value);
                ReportPropertyChanging("MaxTaskNumber");
                _MaxTaskNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxTaskNumber");
                OnMaxTaskNumberChanged();
            }
        }
        private global::System.Int32 _MaxTaskNumber;
        partial void OnMaxTaskNumberChanging(global::System.Int32 value);
        partial void OnMaxTaskNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IPAndPort
        {
            get
            {
                return _IPAndPort;
            }
            set
            {
                OnIPAndPortChanging(value);
                ReportPropertyChanging("IPAndPort");
                _IPAndPort = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IPAndPort");
                OnIPAndPortChanged();
            }
        }
        private global::System.String _IPAndPort;
        partial void OnIPAndPortChanging(global::System.String value);
        partial void OnIPAndPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                OnInstanceIdChanging(value);
                ReportPropertyChanging("InstanceId");
                _InstanceId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstanceId");
                OnInstanceIdChanged();
            }
        }
        private global::System.String _InstanceId;
        partial void OnInstanceIdChanging(global::System.String value);
        partial void OnInstanceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InstanceStarterBaseModel", "FK_TableTask_TableInstance", "TableTask")]
        public EntityCollection<TableTask> TableTask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TableTask>("InstanceStarterBaseModel.FK_TableTask_TableInstance", "TableTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TableTask>("InstanceStarterBaseModel.FK_TableTask_TableInstance", "TableTask", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InstanceStarterBaseModel", Name="TableTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TableTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TableTask object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="videoProxyPort">Initial value of the VideoProxyPort property.</param>
        /// <param name="running">Initial value of the Running property.</param>
        public static TableTask CreateTableTask(global::System.Int64 id, global::System.Int32 instanceId, global::System.Guid taskId, global::System.Int32 videoProxyPort, global::System.Boolean running)
        {
            TableTask tableTask = new TableTask();
            tableTask.ID = id;
            tableTask.InstanceId = instanceId;
            tableTask.TaskId = taskId;
            tableTask.VideoProxyPort = videoProxyPort;
            tableTask.Running = running;
            return tableTask;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                OnInstanceIdChanging(value);
                ReportPropertyChanging("InstanceId");
                _InstanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstanceId");
                OnInstanceIdChanged();
            }
        }
        private global::System.Int32 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int32 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                OnTaskIdChanging(value);
                ReportPropertyChanging("TaskId");
                _TaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskId");
                OnTaskIdChanged();
            }
        }
        private global::System.Guid _TaskId;
        partial void OnTaskIdChanging(global::System.Guid value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VideoProxyPort
        {
            get
            {
                return _VideoProxyPort;
            }
            set
            {
                OnVideoProxyPortChanging(value);
                ReportPropertyChanging("VideoProxyPort");
                _VideoProxyPort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VideoProxyPort");
                OnVideoProxyPortChanged();
            }
        }
        private global::System.Int32 _VideoProxyPort;
        partial void OnVideoProxyPortChanging(global::System.Int32 value);
        partial void OnVideoProxyPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Running
        {
            get
            {
                return _Running;
            }
            set
            {
                OnRunningChanging(value);
                ReportPropertyChanging("Running");
                _Running = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Running");
                OnRunningChanged();
            }
        }
        private global::System.Boolean _Running;
        partial void OnRunningChanging(global::System.Boolean value);
        partial void OnRunningChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InstanceStarterBaseModel", "FK_TableTask_TableInstance", "TableInstance")]
        public TableInstance TableInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TableInstance>("InstanceStarterBaseModel.FK_TableTask_TableInstance", "TableInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TableInstance>("InstanceStarterBaseModel.FK_TableTask_TableInstance", "TableInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TableInstance> TableInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TableInstance>("InstanceStarterBaseModel.FK_TableTask_TableInstance", "TableInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TableInstance>("InstanceStarterBaseModel.FK_TableTask_TableInstance", "TableInstance", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
