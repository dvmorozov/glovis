@{
    ViewBag.Title = "Features";
    Layout = "~/Views/Shared/_LayoutRepresentation.cshtml";
}

<script type="text/javascript">
    //  Must be after page loading.
    window.onload = function () {
        //  Does not still work.
        //setVoteButtonStyle();
        alignDivsRightLeft();
    };
</script>

<h1>Features</h1>
<div>
    <div class="picture-div">
        <h2>Event detection by the videocontroller</h2>
        <img src="../../Content/images/features/event detection by the videocontroller.png"
             alt="Event detection by the videocontroller" width="50%" class="rightimg" />
        <p>
            This feature is useful when there is no need for continuous video recording and gathering.
            For example, for security purposes or for surveillance of unmanned objects. In these cases
            only some changes in environment have meaning. For instance, fluctuation of signal of a sensor
            or change of picture in front of the camera. These changes are called as events.
        </p>
        <p>This illustration depicts the variant with using of videocontroller (more information about what 
            the videocontroller is you can find in the @Html.ActionLink("\"Components\"", "Components", "Home") section).</p>
        <p>When event is occured the video controller uploads recorded video fragment together with sensor data to the 
            Oonze application. Then the latter sends a notification messge by the way preliminarily configure by user. This message
            contains the URL to the encrypted video and data. The client software after receiving the message downloads, decrypts and
            represents video and data.</p>
        <p>The most important feature is that the decryption key is stored at the client device. So the video and data are protected from
            any person including staff of the service provider but except the owner of the key.</p>
        <p>In addition, in this case event detection occured at level of device. So, only important fragments are translated through
            the Internet. This minimizes traffic and allows transmission by means of cellular networks.</p>
        <p>Threshold values for event detection are configured at the installation stage and can be modified at any time. For motion
            detection not only sensitivity but also some region in the view of camera can be configured.
            </p>
               
        <div class="poll">
            <table>
                <tr>
                    <td><div class="poll-warning"></div></td>
                    <td>
                        <div class="poll-button">
                            <input type="submit" value="Add" onclick="pollAnswer('Features', '@Server.UrlEncode("Event detection with notification")');"/>
                        </div>
                    </td>
                </tr>
            </table>
        </div> 
    </div>
    <div class="picture-div">
        <h2>Motion detection in the cloud</h2>
        <img src="../../Content/images/features/event detection in the cloud.png"
                alt="Event detection with notification" width="50%" class="leftimg" />
        <p>
            This feature can have the same applications as the previous one. But in this case ordinary web-cameras are used. So, in this case video protection
            is ensured by means of web-cameras and total end-to-end encryption is impossible. In addition this required to provide external access to the camera
            that increases vulnerability.
        </p>
        <p>
            In this case the algorithm of motion detection is runned at the cloud. So, this feature requires uninterrupted connection between the camera and
            the cloud application.
        </p>
        <p>
            In addition to capturing the video this mode allows gathering of snapshots. In the latter case for user convenience the sequence of snapshots is 
            converted into video and URL to the video is attached to the notification message.
        </p>
        <p>
            In summary, this method is suitable for surveillance in public places (where privacy is not important) by means of ordinary web-cameras.
        </p>

        <div class="poll">
            <table>
                <tr>
                    <td><div class="poll-warning"></div></td>
                    <td>
                        <div class="poll-button">
                            <input type="submit" value="Add" onclick="pollAnswer('Features', '@Server.UrlEncode("Motion detection in the cloud")');"/>
                        </div>
                    </td>
                </tr>
            </table>
        </div> 
    </div>
    <div class="picture-div">
        <h2>Control with digital signature</h2>
        <img src="../../Content/images/features/control with signature.png"
                alt="The collaboration diagram for user contol with signature" width="50%" class="leftimg" />
        <p>
            This feature allows transmission of control commands from user to videocontroller.
            In this case obviously the videocontroller must have some commutation apparatus.
            More information about capabilities of videocontroller you can find in the
            @Html.ActionLink("\"Structure\"", "Components", "Home") section.
        </p>
        <p>
            Since public networks are used to communicate with controllers there are strong 
            requirements for data protection and ensuring identity of source of commands.
            The data are encrypted by two levels of encryption as described below.
            The client application signs all outgoing commands (at the user side) by the digital signature.
            The videocontroller checks validity of the signature for all received commands.
            The command is performed only after confirmation of the source.
        </p>
        <p>
            Exchange of necessary key pairs is performed at the stage of initial configuration of the videocontroller.
        </p>
            
        <div class="poll">
            <table>
                <tr>
                    <td><div class="poll-warning"></div></td>
                    <td>
                        <div class="poll-button">
                            <input type="submit" value="Add" onclick="pollAnswer('Features', '@Server.UrlEncode("Control with digital signature")');"/>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="picture-div">
        <h2>Configurable automatic control with notification</h2>
        <img src="../../Content/images/features/autocontrol with notification.png"
             alt="The collaboration diagram for automatic control with notification" width="50%" class="rightimg" />
        <p>
            This feature allows to automatically perform some simple control actions at the object in response on sensor or video events.
        </p>
        <p>
            Because the videocontroller can have (optionally) controllable apparatus (relays) 
            the embedded software of the controller has configurable logic to perform
            some action in response to some events. As possible examples of such actions 
            I can mention turning on the light or sound alarm.
        </p>
        <p>
            Every time when action has been executed the videocontroller sends a notification message to the application.
            The latter stores the message in database for future review and resends the message to the client application.
        </p>
        <p>
            Encryption and digital signature are used to protect the data and identify the data source as described below.
        </p>
            
        <div class="poll">
            <table>
                <tr>
                    <td><div class="poll-warning"></div></td>
                    <td>
                        <div class="poll-button">
                            <input type="submit" value="Add" onclick="pollAnswer('Features', '@Server.UrlEncode("Configurable automatic control with notification")');"/>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="picture-div">
        <h2>Transmission of video and data with ene-to-end encryption</h2>
        <img src="../../Content/images/features/transmission with end-to-end encryption.png"
                alt="The collaboration diagram for transmission of video and data with end-to-end encryption" width="50%" class="leftimg" />
        <p>
            Since public networks are used to communicate with controllers there are strong 
            requirements for data protection and ensuring identity of source of data.
            All the data transmitted between user and videocontroller are encrypted by two
            level of encryption. 
        </p>
        <ul>
                
            <li>The first level protects data end-to-end between the video
                controller and the client software. The necessary exchange of keys is performed
                at the stage of device installation (ending with device registration in the application).
                In this case data are decrypted only at receiving end (either client software or videocontroller)
                and are protected from anyone including staff of the service providers. Data 
                protected at this level contains video, commands, values of sensor measurements, events.
            </li>
            <li>
                The second level protects data between the client software and the application
                and between the application and the videocontroller.
                At this level the application has access to some parts of data necessary to perform
                its functionality. For example, these data are timestamps, location coordinates.
            </li>
        </ul>
        <p>
            In addition to encryption the digital signatures are used at both sides (client application and
            videocontroller) to identify the source of command, data and video. Exchange of necessary key
            pairs is performed at the stage of installation and configuration of the videocontroller.
        </p>

        <div class="poll">
            <table>
                <tr>
                    <td><div class="poll-warning"></div></td>
                    <td>
                        <div class="poll-button">
                            <input type="submit" value="Add" onclick="pollAnswer('Features', '@Server.UrlEncode("Transmission of video and data with ene-to-end encryption")');"/>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="picture-div">
        <h2>Associating video with GPS location</h2>
        <img src="../../Content/images/features/associating video with GPS location.png"
             alt="Associating video with GPS location" width="50%" class="rightimg" />
        <p>
            This feature allows to assign video with geospatial information. This purpose
            can be achieved by two ways. The first one is to use the videocontroller
            equipped by external or internal GPS receiver. For more information about
            capabilities of the videocontroller you can see the @Html.ActionLink("\"Components\"", "Components", "Home") section.
            In this case the videocontroller assigns all data and video uploaded to the
            application with GPS coordinates and precise timestamp. This allows the
            video source to be movable. The second way is to configure stationary
            locations of video sources manually. In this case it is not necessary 
            to use the videocontoller, the ordinary web-camera can be suitable.
        </p>
        <p>
            This feature is at the basis of a few use cases associated with map providers.
            For more information see the @Html.ActionLink("\"Use Cases\"", "UseCases", "Home") section.
        </p>
            
        <div class="poll">
            <table>
                <tr>
                    <td><div class="poll-warning"></div></td>
                    <td>
                        <div class="poll-button">
                            <input type="submit" value="Add" onclick="pollAnswer('Features', '@Server.UrlEncode("Associating video with GPS location")');"/>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="picture-div">
        <h2>Secure transmission from videocontroller to the Oonze application</h2>
        <img src="../../Content/images/features/source is active.png"
                alt="Associating video with GPS location" width="50%" class="leftimg" />
        <p>
            This feature allows to transmit video through a firewall without compromising of security of your network (no needs
            to open any ports at the video controller side). This possibility is provided by the videocontroller. More information 
            about what the videocontroller is you can find in the @Html.ActionLink("\"Components\"", "Components", "Home") section.
        </p>
           
        <div class="poll">
            <table>
                <tr>
                    <td><div class="poll-warning"></div></td>
                    <td>
                        <div class="poll-button">
                            <input type="submit" value="Add" onclick="pollAnswer('Features', '@Server.UrlEncode("Secure transmission from videocontroller to the Oonze application")');"/>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="picture-div">
        <h2>Support of shapshot capturing from ordinary web-cameras</h2>
        <img src="../../Content/images/features/source is passive.png"
                alt="Associating video with GPS location" width="50%" class="rightimg" />
        <p>
            This mode can be useful in the cases when the web-camera supports only snapshot translation. The application takes snapshots from
            the camera with configurable time interval. Gathered snapshots are stored in cloud storage. Then snapshots can be obtained depends
            of the user choice either as compressed file containing them or as single video file (slideshow).
        </p>
        <p>
            This way of capturing has all security lacks mentioned above and is supposed to be used only for non-confidential sources.
        </p>
            
        <div class="poll">
            <table>
                <tr>
                    <td><div class="poll-warning"></div></td>
                    <td>
                        <div class="poll-button">
                            <input type="submit" value="Add" onclick="pollAnswer('Features', '@Server.UrlEncode("Support of shapshot capturing from ordinary web-cameras")');"/>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="picture-div">
        <h2>Protection against device substitution by means of digital signature</h2>
        <img src="../../Content/images/features/transmission of data with digital signature.png"
                alt="Protection against device substitution by the digital signature" width="50%" class="leftimg" />
        <p>
            Because video and data are translated through public networks there is strong need
            to identify the source of information.
            All video and data produced by the videocontroller are signed by the digital signature.
            The keys necessary for digital signature are established during the installation process. 
            This feature protects the application and end user from malicious substitution of the device.
        </p>
        <p>
            In addition this gives to the application the flexibility not to be bound with the
            videocontroller by IP-address. The address can be freely changed. The application identifies
            the source only by its digital signature.
        </p>
            
        <div class="poll">
            <table>
                <tr>
                    <td><div class="poll-warning"></div></td>
                    <td>
                        <div class="poll-button">
                            <input type="submit" value="Add" onclick="pollAnswer('Features', '@Server.UrlEncode("Protection against device substitution by means of digital signature")');"/>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="picture-div">
        <h2>Protection against malicious configuration by means of digital signature</h2>
        <img src="../../Content/images/features/transmission of configuration with digital signature.png"
                alt="Protection against malicious configuration by the digital signature" width="50%" class="rightimg" />
        <p>
            Likewise previous case the application signs the configuration data by digital signature.
            This feature protects from malicious changing of configuraiton of the videocontroller.
        </p>
        <p>
            Exchange of necessary key pairs is performed at the stage of initial configuration of the videocontroller.
        </p>
            
        <div class="poll">
            <table>
                <tr>
                    <td><div class="poll-warning"></div></td>
                    <td>
                        <div class="poll-button">
                            <input type="submit" value="Add" onclick="pollAnswer('Features', '@Server.UrlEncode("Protection against malicious configuration by means of digital signature")');"/>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="picture-div">
        <h2>Monitoring of availability with notification</h2>
        <img src="../../Content/images/features/monitoring of availability with notification.png"
             alt="Monitoring of availability with notification" width="50%" class="leftimg" />
        <p>
            The application continuously monitors the connection with devices and sends notification messages to the user
            in the case of connection failure. When ordinary web-camera is used this is done by polling of device with the
            configurable periodicity. In the case of videocontroller the latter sends notification messages by itself. This
            feature allows the videocontroller to work behind firewall, router and so on without necessity to open any
            external ports.
        </p>
            
        <div class="poll">
            <table>
                <tr>
                    <td><div class="poll-warning"></div></td>
                    <td>
                        <div class="poll-button">
                            <input type="submit" value="Add" onclick="pollAnswer('Features', '@Server.UrlEncode("Monitoring of availability with notification")');"/>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="picture-div">
        <h2>Rights</h2>
        <p>
            These features have been described in the  <span class="important">provisional patent application</span>.
        </p>
        <p>
            Details of the application accepted by USPTO you can find in this @Html.ActionLink("patent description", "ProvisionalPatentApplication", "Downloads").
        </p>
    </div>
</div>
