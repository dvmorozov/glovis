@{
    ViewBag.Title = "Use Cases";
    Layout = "~/Views/Shared/_LayoutRepresentation.cshtml";
}

<script type="text/javascript">
    //  Must be after page loading.
    window.onload = function () {
        //  Does not still work.
        //setVoteButtonStyle();
        alignDivsRightLeft();
    };
</script>

<h1>Use cases</h1>

<div>
    <div class="picture-div">
        <h2>Browse state of objects in realtime</h2>
        <img src="../../Content/images/use_cases/browse state of objects in realtime.png"
                alt="Event detection with notification" width="50%"/>
        <p>
            In this case user can view the image captured from selected camera at the moment. 
            Additionally in the case of videocontroller user can observe current values of signals obtained from sensors.
        </p>
        <p>
            Since public networks are used to transmit video and data between source and user device there are strong 
            requirements for data protection and ensuring source identity. More detailed information about how these requirments 
            are met in this application you can find in the @Html.ActionLink("\"Features\"", "Features", "Home") section.
        </p>
    </div>
    <div class="picture-div">
        <h2>Automatic surveillance of unmanned objects</h2>
        <img src="../../Content/images/use_cases/event detection with notification.png"
                alt="Event detection with notification" width="50%"/>
        <p>In this case it is supposed that most of the time there aren't any events at the object. 
            As sources of such events signals from software motion detection algorithm or external 
            sensors can be configured. 
        </p>
        <p>
            This application requires using the videocontroller. More information about what the videocontroller is
            you can find in the @Html.ActionLink("\"Features\"", "Features", "Home") section.
        </p>
        <p>In the case when event is detected the video controller uploads recorded video fragment together with sensor data to the 
            Oonze application. Then the latter sends notification messge by the way preliminarily configured by user. This message
            contains URL to the encrypted video and data. The client software after receiving the message downloads, decrypts and
            represents video and data.
        </p>
        <p>
            Sensor data and video are protected by encryption. Additionally, the uploaded data are signed by digital signature 
            to avoid malicious substitution. More information about encryption and digital signature you can find in the 
            @Html.ActionLink("\"Features\"", "Features", "Home") section.
        </p>
    </div>
    <div class="picture-div">
        <h2>Temporary or movable surveillance</h2>
        <img src="../../Content/images/use_cases/temporary or movable surveillance.png"
                alt="Temporary or movable surveillance" width="50%"/>
        <p>
            This variant can be useful when it is necessary quickly to deploy surveillance network. For instance, for surveillance
            of mass processions, demonstrations and so on.
        </p>
        <p>
            For this use case key components are GPS, videocontroller, map provider and wireless network. Videocontrollers are
            installed at vehicles. As in previous cases, videocontrollers send encrypted video data accompanied with instantaneous 
            location coordinates to the application. The application then displays realtime map of disposition of video sources 
            and provides possibility of selection and viewing of realtime video from any of these sources.
        </p>
    </div>
    <div class="picture-div">
        <h2>Timeline recording of long-continued processes</h2>
        <img src="../../Content/images/use_cases/recording of timeline of long-continued processes.png"
                alt="Recording of the timeline of long-continued processes" width="50%"/>
        <p>
            This mode allows you to record some slow varying process as a sequence of high quality snapshots. These snapshots are stored
            in the cloud storage. By user request the application generates video fragment from recorded snapshots and provides
            user with URL to it. User can also download initial set of snapshots as compressed file.
        </p>
        <p>
            Every snapshot will be timestamped by the local recording time in the case of using of videocontroller or by the server
            time in the case of ordinary web-camera.
        </p>
        <p>
            User can specify the real time interval between snapshots capturing. 
        </p>
        <p>
            In this case it is possible to use the videocontroller or ordinary web camera depends on data protection requirements. 
            In the latter case snapshots are stored in unencrypted form. If encryption is used the client software decrypts
            video and snapshots.
        </p>
    </div>
    <div class="picture-div">
        <h2>Searching videos by time and location</h2>
        <img src="../../Content/images/use_cases/searching videos by time and location.png"
                alt="Recording of the timeline of long-continued processes" width="50%"/>
        <p>
            This use case can be useful in comparison of a few records obtained from different cameras installed at different places. 
            For example in the case of investigation of accident or criminal act.
        </p>
        <p>
            In this case video is recorder continuously and stored in the cloud storage as a bunch of videofragments of configurable 
            length.
        </p>
        <p>
            The application maintains the video archive of configurable capacity. The user requests records
            covering specified interval of time from cameras placed in specified region defined as
            circle of given radius with center at some point selected on the map. The application searches 
            for records satisfying these requirements, copies parts of them according to the given time interval 
            and returns to user the map with symbols designating camera places and hyperlinks 
            to corresponding video fragments.
        </p>
        <p>
            It is not necessary to use videocontrollers for this purpose. The location of ordinary web-camera can 
            be configured at the stage of installation.
        </p>
    </div>
</div>
