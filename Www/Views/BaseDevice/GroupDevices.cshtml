@model IEnumerable<web.Models.ViewDeviceTypeAndOwner>

@{
    ViewBag.Title = "Cameras associated with the group \"" + ViewBag.GroupName + "\"";
    Layout = "~/Views/Shared/_LayoutRepresentation.cshtml";

    var grid = new WebGrid(Model,
                           defaultSort: "DeviceName",
                           rowsPerPage: 20); 
}

<h2>@Html.Raw(ViewBag.Title)</h2>

<p>
    @Html.ActionLink("Add", "Create", "Device", new { id = ViewBag.CurrentGroupID }, null) |
    @Html.ActionLink("Groups", "Index", "Group")
</p>
<div id="grid">
    @if (Roles.IsUserInRole(User.Identity.Name, "Developer"))
    {
        @*Добавляется колонка XML-шаблона.*@
        @grid.GetHtml(
            tableStyle: "grid",
            headerStyle: "head",
            alternatingRowStyle: "alt",
            columns: grid.Columns(
                grid.Column("DeviceName", "Name", style: "product"),
                @*grid.Column("DeviceTypeName", "Type", style: "product"),*@
                @*grid.Column("DeviceOwnerName", "Owner", style: "product"),*@
                grid.Column("PrimaryIP", "Primary IP", style: "product"),
                grid.Column("PrimaryPort", "Primary Port", style: "product"),
                @*grid.Column("SecondaryIP", "Secondary IP", style: "product"),
                grid.Column("SecondaryPort", "Secondary Port", style: "product"),
                grid.Column("InternalAddress", "Internal Address", style: "product"),*@
                @*grid.Column("ID", "", format: @<text>@Html.ActionLink("State", (String)("State/" + item.ID.ToString()), "DeviceAttribute")</text>, style: "product", canSort: false),
                grid.Column("ID", "", format: @<text>@Html.ActionLink("Acquisition", (String)("Index/" + item.ID.ToString()), "DeviceLogicalDevice")</text>, style: "product", canSort: false),*@
                grid.Column("ID", "", @<text>@Html.ActionLink("Edit", "Edit", "Device", new { id = item.ID }, null)</text>, style: "product", canSort: false),
                grid.Column("ID", "", @<text>@Html.ActionLink("Details", "Details", new { id = item.ID })</text>, style: "product", canSort: false),
                grid.Column("ID", "", @<text>@Html.ActionLink("Delete", "Delete", new { id = item.ID })</text>, style: "product", canSort: false),
                grid.Column("ID", "", @<text>@Html.ActionLink("XML Template", "XMLTemplate", "Device", new { id = item.ID }, null)</text>, "product", false)
            ),
            numericLinksCount: 20
        )
    }
 else
 {
        @grid.GetHtml(
            tableStyle: "grid",
            headerStyle: "head",
            alternatingRowStyle: "alt",
            columns: grid.Columns(
                grid.Column("DeviceName", "Name", style: "product"),
                @*grid.Column("DeviceTypeName", "Type", style: "product"),*@
                @*grid.Column("DeviceOwnerName", "Owner", style: "product"),*@
 grid.Column("PrimaryIP", "Primary IP", style: "product"),
                grid.Column("PrimaryPort", "Primary Port", style: "product"),
                @*grid.Column("SecondaryIP", "Secondary IP", style: "product"),
                grid.Column("SecondaryPort", "Secondary Port", style: "product"),
                grid.Column("InternalAddress", "Internal Address", style: "product"),*@
                @*grid.Column("ID", "", format: @<text>@Html.ActionLink("State", (String)("State/" + item.ID.ToString()), "DeviceAttribute")</text>, style: "product", canSort: false),
                grid.Column("ID", "", format: @<text>@Html.ActionLink("Acquisition", (String)("Index/" + item.ID.ToString()), "DeviceLogicalDevice")</text>, style: "product", canSort: false),*@
 grid.Column("ID", "", @<text>@Html.ActionLink("Edit", "Edit", "Device", new { id = item.ID }, null)</text>, style: "product", canSort: false),
                grid.Column("ID", "", @<text>@Html.ActionLink("Details", "Details", new { id = item.ID })</text>, style: "product", canSort: false),
                grid.Column("ID", "", @<text>@Html.ActionLink("Delete", "Delete", new { id = item.ID })</text>, style: "product", canSort: false)
            ),
            numericLinksCount: 20
        )
    }
</div>