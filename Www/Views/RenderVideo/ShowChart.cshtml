@model ViewChart
@using web.Models;

@{
    ViewBag.Title = "Fragments from \"" + Model.Name.TrimEnd() + "\"";
    Layout = "~/Views/Shared/_LayoutRepresentation.cshtml";
}

<script type="text/javascript">
    $(function () {
        update();
    });

    var blockUpdate = false;

    function update() {
        var u = String(document.URL);
        $.ajax({
            url: u.replace(/ShowChart/g, 'Update'),
            method: "GET",
            dataType: "text",
            cache: false,
            timeout: 10000,

            success: function (response) {
                if (undefined == response)
                    return;

                destroyDialogs();

                var el = document.getElementById('table_current_state');
                $(el).empty();
                el.innerHTML = new String(response);

                initDialogs();
                setButtonStyle();
            },

            error: function () { },
            complete: function () {
                setTimeout(function () {
                    if (!blockUpdate) update();
                }, 10000);
            }
        });
    };

    function destroyDialogs () {
        $("div[id*='dialog']").each(
            function() {
                $(this).dialog("destroy");
                //  Must be, otherwise the garbage is accumulated!
                $(this).remove();
            }
        );
    }

    function initDialogs () {
        $("div[id*='dialog']").each(
            function () {
                $(this).dialog({
                    height: 'auto',
                    width: 'auto',
                    autoOpen: false,
                    resizable: false,
                    show: { effect: "explode", duration: 500 },
                    hide: { effect: "explode", duration: 500 },
                    open: function () { document.getElementById("video_" + $(this).attr("id")).play(); blockUpdate = true; },
                    beforeClose: function () {
                        document.getElementById("video_" + $(this).attr("id")).pause();
                        blockUpdate = false;
                        update();
                    }
                });
            });
        }

    function setButtonStyle() {
        $('input:submit').each(function () {
            //  Replaces "submit" with "button".
            $(this).replaceWith('<button type="' + $(this).attr('type') + '">' + $(this).val() + '</button>');

            //  Adds the icon to the "button".
            var b = $("button").button({ icons: { primary: "ui-icon-closethick" }, text: false }).click(function (event) {
                event.preventDefault();
            });

            //  Sets the height of the "button".
            if (b !== null && b !== undefined) {
                b.css("height", "32px");
                b.click(function() { b.parent().submit(); });
            }
        });
    };
</script>


<h2>@Html.Raw(ViewBag.Title)</h2>

<p>
    @Html.ActionLink("Screens", "Index", "Chart") |
    @Html.ActionLink("Edit", "Edit", "Chart", new { id = Model.ID }, null) |
    @Html.ActionLink("Source", "DataSet", "Chart", new { id = Model.ID }, null) <!-- | -->
    @{/*Html.ActionLink("XLSX", "XLSX", "Chart", new { id = Model.ID }, null)*/}
</p>

<fieldset>
    <legend>Fragments</legend>
    <br />
    <div id="table_current_state">
    </div>
</fieldset>
